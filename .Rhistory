q()
q()
knitr::opts_chunk$set(echo = TRUE)
LicaPopular <- datos[order(datos$popularity,decreasing = TRUE),]
datos <- read.csv("movies.csv")
LicaPopular <- datos[order(datos$popularity,decreasing = TRUE),]
top20 <- LicaPopular[1:20,c("genres")]
genres20 <- unlist(strsplit(as.character(top20), "\\|"))
genres20
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
topGenre20 <- getmode(genres20)
topGenre20
totalGenres <- unlist(strsplit(as.character(datos$genres), "\\|"))
barplot(table(totalGenres))
knitr::opts_chunk$set(echo = TRUE)
revenueByMovie <- order(datos$revenue, decreasing = T)
head(datos[revenueByMovie,c("actorsAmount","revenue","title")])
datos <- read.csv("movies.csv")
summary(datos)
str(datos)
worstvalue <- order(datos$voteAvg, decreasing = T)
head(datos[worstvalue,c("voteAvg","title")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title","original_title")])
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","originalTitle")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title")])
topcount <- head(order(datos$voteCount, decreasing = T), n=1)
datos[topcount,c("title","voteCount")]
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
worstvalue <- order(datos$voteAvg, decreasing = T)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
topcount <- head(order(datos$voteCount, decreasing = T), n=15)
datos[topcount,c("title","voteCount")]
topcount <- head(order(datos$voteCount, decreasing = T), n=15)
datos[topcount,c("title","voteCount","voteAvg")]
topcount <- head(order(datos$voteCount, decreasing = T), n=15)
datos[topcount,c("title","voteCount")]
worstvalue <- order(datos$voteAvg, decreasing = T,n=1)
worstvalue <- order(datos$voteAvg, decreasing = T),n=1)
worstvalue <- head(order(datos$voteAvg, decreasing = T),n=1)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title")])
#title, titulo
#releaseDAte, fecha de lanzamiento
Dates <- data.frame(datos$title, datos$releaseDate)
PorAnioDesc <- data.frame(Dates[order(Dates$datos.releaseDate),])
year1 <- data.frame(table(substring(PorAnioDesc$datos.releaseDate,1,4)))
finales <- as.numeric(substring(PorAnioDesc$datos.releaseDate,1,4))
hist(finales,breaks = 100)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
gananciasVSpresupuesto <- order(datos$budget, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = T),n=1)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title")])
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(datos$budget)
plot(x = datos$budget, y = datos$revenue)
presupuesto <- data.frame(datos$budget, datos$originalTitle)
ingresos <- data.frame(datos$revenue, datos$originalTitle)
presupuesto <- data.frame(datos$budget, datos$originalTitle)
ingresos <- data.frame(datos$revenue, datos$originalTitle)
plot(presupuesto[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
plot(x = datos$revenue, y = datos$revenue)
plot(x = datos$revenue, y = datos$budget)
plot(x = datos$revenue, y = datos$budget)
qqline(datos$revenue,col="red")
plot(x = datos$revenue, y = datos$budget)
qqline(datos$budget,col="red")
plot(x = datos$revenue, y = datos$budget)
qqline(datos$revenue,col="red")
qqnorm(x = datos$revenue, y = datos$budget)
qqline(datos$revenue,col="red")
qqnorm(y = datos$revenue, x = datos$budget)
qqline(datos$revenue,col="red")
qqnorm( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
boxplot(x = datos$budget, y = datos$revenue)
hist(x = datos$budget, y = datos$revenue)
hist(datos$budget, datos$revenue)
hist(datos$budget, datos$revenue)
hist(datos$budget)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(gananciasVSpresupuesto)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(gananciasVSpresupuesto$revenue)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(datos$revenue)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(datos$revenue,c("revenue","title"))
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
qqnorm( Y = datos$budget, X = datos$revenue,)
qqnorm( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
plot( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
qqnorm( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
qqnorm(x = datos$revenue,  y = datos$budget, )
qqline(datos$revenue,col="red")
qqnorm(y = datos$revenue,  x = datos$budget, )
qqline(datos$revenue,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
qqline(datos$revenue,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
qqline(datos$budget,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
qqline(datos$revenue,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
mesvsingresos <- order(datos$revenue, decreasing = T)
head(datos[mesvsingresos,c("relaseDate","revenue","title")])
mesvsingresos <- order(datos$revenue, decreasing = T)
head(datos[mesvsingresos,c("releaseDate","revenue","title")])
install.packages("tidyverse")
library(tydyr)
library(tydyr)
library(tidyr)
#mesvsingresos <- order(datos$revenue, decreasing = T)
#head(datos[mesvsingresos,c("releaseDate","revenue","title")])
mesvsingresos <- separate(df, col = relaseDate, into=c("year", "month", "day"), sep="-")
mesvsingresos <- separate(df, col = relaseDate, into=c("year", "month", "day"), sep="-")
mesvsingresos <- separate(datos$releaseDate, col = relaseDate, into=c("year", "month", "day"), sep="-")
mesvsingresos <- separate(datos$releaseDate, col = relaseDate, into=c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos$releaseDate, col = relaseDate, into=c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos$releaseDate, col = relaseDate, into=c('year', 'month', 'day'), sep='-')
mesvsingresos <- separate(datos$releaseDate, col = relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos <- separate(datos$releaseDate, relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos$releaseDate, relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos, relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos <- separate(datos, relaseDate, c('year', 'month', 'day'), sep='-')
datos %>% separate(relaseDate, c('year', 'month', 'day'), sep='-')
qqnorm(x = datos$budget, y = datos$revenue)
datos %>% separate(datos$relaseDate, c('year', 'month', 'day'), sep='-')
datos %>% separate(dato, relaseDate, c('year', 'month', 'day'), sep='-')
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
qqnorm(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteAvg, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(x = datos$voteAvg, y = datos$revenue)
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue)
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion". x="ingresos", y="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion". xlab="ingresos", ylab="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion", xlab="ingresos", ylab="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion", x="ingresos", y="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion")
date <- datos %>% separate(relaseDate, c("y", "m", "d"), sep = "-")
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(datos[gananciasVSpresupuesto,c("m","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=30)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=100)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=1000)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=10000)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=100000)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m"=12,"revenue","title")],)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
hist(date$m)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
hist(date)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
hist(date$m)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
date$m <-as.numeric(date$m)
meses = date$m
kurtosis(meses, na.rm = T)
??kurtosis
library(dplyr)
library(ggplot2)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
date$m <-as.numeric(date$m)
meses = date$m
kurtosis(meses, na.rm = T)
library(kurtosis)
library("kurtosis")
revenue = datos$revenue
kurtosis(revenue)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
sort(table(date$m), TRUE)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
r <- order(date$revenue, decreasing = T)
head(date[r,c("m","revenue","title")],)
knitr::opts_chunk$set(echo = TRUE)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
library(tidyr)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
duracion <- order(datos$runtime, decreasing = T)
head(datos[duracion,c("runtime","genres","title")])
knitr::opts_chunk$set(echo = TRUE)
NombreDeLaVariables <- c("id", "popularity", "budget", "revenue", "original_title", "originalLanguage", "title", "homePage", "video", "director", "runtime", "genres", "genresAmount", "productionCompany", "productionCoAmount", "productionCompanyCountry", "productionCountry", "productionCountriesAmount", "releaseDate", "voteCount", "voteAvg", "actors", "actorsPopularity", "actorsCharacter", "actorsAmount", "castWomenAmount", "CastMenAmount")
Continua <- c("", "x", "", "x", "", "", "", "", "", "", "x", "", "", "", "x", "", "", "", "", "", "x", "", "", "", "", "", "")
Discreta <- c("x", "", "x", "", "", "", "", "", "", "", "", "", "x", "", "", "", "", "x", "", "x", "", "", "", "", "x", "x", "x")
Nominal <- c("", "", "", "", "x", "x", "x", "x", "x", "x", "", "x", "", "x", "", "x", "x", "", "", "", "", "x", "x", "x", "", "", "")
Ordinal <- c("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "x", "", "", "", "", "", "", "", "")
DataFrame.NombreDeLaVariables <- data.frame(NombreDeLaVariables, Continua,Discreta,Nominal,Ordinal)
print(DataFrame.NombreDeLaVariables)
knitr::opts_chunk$set(echo = TRUE)
budget = datos$budget
kurtosis(budget)
library(dplyr)
library(ggplot2)
library(tidyr)
datos <- read.csv("movies.csv")
library(dplyr)
library(ggplot2)
library(tidyr)
datos <- read.csv("movies.csv")
budget = datos$budget
kurtosis(budget)
library("kurtosis")
install.packages("kurtosis")
library("kurtosis")
budget = datos$budget
kurtosis(budget)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kurtosis)
kurtosis??
ddd
library(dplyr)
library(ggplot2)
library(tidyr)
library(psych)
install.packages("psych")
library(dplyr)
library(ggplot2)
library(tidyr)
library(psych)
datos <- read.csv("movies.csv")
runtime = datos$runtime
kurtosis(runtime)
#instalar
#install.packages('e1071')
library(e1071)
#instalar
#install.packages('e1071')
library(e1071)
budget = datos$budget
kurtosis(budget)
popularity = datos$popularity
kurtosis(popularity)
#instalar
#install.packages('e1071')
library(e1071)
runtime = datos$runtime
kurtosis(runtime)
vote_count = datos$voteCount
kurtosis(vote_count)
setwd("C:/Users/estra/OneDrive/Documentos/GitHub/HojaT4-ArbolesDeDecision-MineriaDeDatos")
